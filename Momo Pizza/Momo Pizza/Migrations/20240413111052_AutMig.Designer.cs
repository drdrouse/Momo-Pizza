// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Momo_Pizza.Models;

#nullable disable

namespace Momo_Pizza.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240413111052_AutMig")]
    partial class AutMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Momo_Pizza.Models.Authorized", b =>
                {
                    b.Property<int>("AuthorizedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorizedId"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorizedId");

                    b.ToTable("Authorizeds");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketId"));

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Dough", b =>
                {
                    b.Property<int>("DoughId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoughId"));

                    b.Property<double?>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type_flour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoughId");

                    b.ToTable("Doughs");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Filling", b =>
                {
                    b.Property<int>("FillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FillingId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Id_Pizza")
                        .HasColumnType("int");

                    b.Property<int>("IndredientID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("FillingId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Fillings");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<double?>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Id_Basket")
                        .HasColumnType("int");

                    b.Property<int>("Id_Pizza")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("BasketId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<int>("DoughId")
                        .HasColumnType("int");

                    b.Property<int>("ID_Dough")
                        .HasColumnType("int");

                    b.Property<int>("ID_Sauce")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SaucesSauceId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId");

                    b.HasIndex("DoughId");

                    b.HasIndex("SaucesSauceId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Sauce", b =>
                {
                    b.Property<int>("SauceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SauceId"));

                    b.Property<double?>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Sauce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type_Sauce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SauceId");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("Momo_Pizza.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Basket", b =>
                {
                    b.HasOne("Momo_Pizza.Models.User", "User")
                        .WithMany("Baskets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Filling", b =>
                {
                    b.HasOne("Momo_Pizza.Models.Ingredient", "Ingredient")
                        .WithMany("Fillings")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Momo_Pizza.Models.Pizza", "Pizza")
                        .WithMany("Fillings")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Order", b =>
                {
                    b.HasOne("Momo_Pizza.Models.Basket", "Basket")
                        .WithMany("Orders")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Momo_Pizza.Models.Pizza", "Pizza")
                        .WithMany("Orders")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Pizza", b =>
                {
                    b.HasOne("Momo_Pizza.Models.Dough", "Dough")
                        .WithMany("Pizzas")
                        .HasForeignKey("DoughId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Momo_Pizza.Models.Sauce", "Sauces")
                        .WithMany("Pizzas")
                        .HasForeignKey("SaucesSauceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dough");

                    b.Navigation("Sauces");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Basket", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Dough", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Ingredient", b =>
                {
                    b.Navigation("Fillings");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Pizza", b =>
                {
                    b.Navigation("Fillings");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Momo_Pizza.Models.Sauce", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Momo_Pizza.Models.User", b =>
                {
                    b.Navigation("Baskets");
                });
#pragma warning restore 612, 618
        }
    }
}
